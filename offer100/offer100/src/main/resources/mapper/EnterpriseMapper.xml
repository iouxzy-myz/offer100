<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.hust.offer100.dao.EnterpriseMapper">
  <resultMap id="BaseResultMap" type="cn.hust.offer100.pojo.Enterprise">
    <id column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="enterprise_name" jdbcType="VARCHAR" property="enterpriseName" />
    <result column="enterprise_logourl" jdbcType="VARCHAR" property="enterpriseLogourl" />
    <result column="enterprise_website" jdbcType="VARCHAR" property="enterpriseWebsite" />
    <result column="enterprise_phone" jdbcType="VARCHAR" property="enterprisePhone" />
    <result column="enterprise_email" jdbcType="VARCHAR" property="enterpriseEmail" />
    <result column="enterprise_city" jdbcType="VARCHAR" property="enterpriseCity" />
    <result column="enterprise_sector" jdbcType="VARCHAR" property="enterpriseSector" />
    <result column="enterprise_scale" jdbcType="VARCHAR" property="enterpriseScale" />
    <result column="enterprise_profile" jdbcType="VARCHAR" property="enterpriseProfile" />
    <result column="enterprise_details" jdbcType="VARCHAR" property="enterpriseDetails" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
  </resultMap>
  <select id="save">
      insert into enterprise ( user_id, enterprise_name,enterprise_logourl,
      enterprise_website, enterprise_phone, enterprise_email, 
      enterprise_city, enterprise_sector, enterprise_scale, 
      enterprise_profile, enterprise_details,status)
    values ( #{userId,jdbcType=INTEGER}, 
      #{enterpriseName,jdbcType=VARCHAR}, #{enterpriseLogourl,jdbcType=VARCHAR}, 
      #{enterpriseWebsite,jdbcType=VARCHAR}, #{enterprisePhone,jdbcType=VARCHAR}, #{enterpriseEmail,jdbcType=VARCHAR}, 
      #{enterpriseCity,jdbcType=VARCHAR}, 
      #{enterpriseSector,jdbcType=VARCHAR}, #{enterpriseScale,jdbcType=VARCHAR}, 
      #{enterpriseProfile,jdbcType=VARCHAR},
      #{enterpriseDetails,jdbcType=VARCHAR},
      #{status,jdbcType=CHAR})
  </select>
  
  
  <select id="get" resultMap="BaseResultMap">
  select * 
  from enterprise
  where user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  
<!--   <select id="findList" resultMap="BaseResultMap">
  select * 
  from enterprise
  where status = '0'
  </select> -->
  
  <select id="update" >
  update enterprise
    <set>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseLogourl != null">
        enterprise_logourl = #{enterpriseLogourl,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseWebsite != null">
        enterprise_website = #{enterpriseWebsite,jdbcType=VARCHAR},
      </if>
      <if test="enterprisePhone != null">
        enterprise_phone = #{enterprisePhone,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseSector != null">
       	enterprise_sector = #{enterpriseSector,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseCity != null">
        enterprise_city = #{enterpriseCity,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseScale != null">
        enterprise_scale = #{enterpriseScale,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseDetails != null">
        enterprise_details = #{enterpriseDetails,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseProfile != null">
        enterprise_profile = #{enterpriseProfile,jdbcType=VARCHAR},
      </if>
      <if test="status != null and status != '' ">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="reason != null and reason != '' ">
        reason = #{reason,jdbcType=VARCHAR}
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  
 <select id="findList" resultMap="BaseResultMap">
  	SELECT *
  	from enterprise
  	<where>
  	  <if test="enterpriseId != null ">
       enterprise_id = #{enterpriseId,jdbcType=INTEGER}
      </if>
      <if test="enterpriseName != null">
       and enterprise_name like concat('%',#{enterpriseName},'%')
      </if>
      <if test="status != null">
       and status = #{status,jdbcType=CHAR}
      </if>
    </where>
  </select> 
  <!-- <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    enterprise_id, user_id, enterprise_name, enterprise_logourl, enterprise_website, 
    enterprise_phone, enterprise_email, enterprise_city, enterprise_sector, enterprise_scale, 
    enterprise_profile, enterprise_details
  </sql>
  <select id="selectByExample" parameterType="cn.hust.offer100.pojo.EnterpriseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enterprise
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.hust.offer100.pojo.EnterpriseExample">
    delete from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.hust.offer100.pojo.Enterprise">
    insert into enterprise (enterprise_id, user_id, enterprise_name, 
      enterprise_logourl, enterprise_website, enterprise_phone, 
      enterprise_email, enterprise_city, enterprise_sector, 
      enterprise_scale, enterprise_profile, enterprise_details
      )
    values (#{enterpriseId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{enterpriseName,jdbcType=VARCHAR}, 
      #{enterpriseLogourl,jdbcType=VARCHAR}, #{enterpriseWebsite,jdbcType=VARCHAR}, #{enterprisePhone,jdbcType=VARCHAR}, 
      #{enterpriseEmail,jdbcType=VARCHAR}, #{enterpriseCity,jdbcType=VARCHAR}, #{enterpriseSector,jdbcType=VARCHAR}, 
      #{enterpriseScale,jdbcType=VARCHAR}, #{enterpriseProfile,jdbcType=VARCHAR}, #{enterpriseDetails,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.hust.offer100.pojo.Enterprise">
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="enterpriseName != null">
        enterprise_name,
      </if>
      <if test="enterpriseLogourl != null">
        enterprise_logourl,
      </if>
      <if test="enterpriseWebsite != null">
        enterprise_website,
      </if>
      <if test="enterprisePhone != null">
        enterprise_phone,
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email,
      </if>
      <if test="enterpriseCity != null">
        enterprise_city,
      </if>
      <if test="enterpriseSector != null">
        enterprise_sector,
      </if>
      <if test="enterpriseScale != null">
        enterprise_scale,
      </if>
      <if test="enterpriseProfile != null">
        enterprise_profile,
      </if>
      <if test="enterpriseDetails != null">
        enterprise_details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseName != null">
        #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseLogourl != null">
        #{enterpriseLogourl,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseWebsite != null">
        #{enterpriseWebsite,jdbcType=VARCHAR},
      </if>
      <if test="enterprisePhone != null">
        #{enterprisePhone,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseCity != null">
        #{enterpriseCity,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseSector != null">
        #{enterpriseSector,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseScale != null">
        #{enterpriseScale,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseProfile != null">
        #{enterpriseProfile,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseDetails != null">
        #{enterpriseDetails,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.hust.offer100.pojo.EnterpriseExample" resultType="java.lang.Long">
    select count(*) from enterprise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enterprise
    <set>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.enterpriseName != null">
        enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseLogourl != null">
        enterprise_logourl = #{record.enterpriseLogourl,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseWebsite != null">
        enterprise_website = #{record.enterpriseWebsite,jdbcType=VARCHAR},
      </if>
      <if test="record.enterprisePhone != null">
        enterprise_phone = #{record.enterprisePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseEmail != null">
        enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseCity != null">
        enterprise_city = #{record.enterpriseCity,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseSector != null">
        enterprise_sector = #{record.enterpriseSector,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseScale != null">
        enterprise_scale = #{record.enterpriseScale,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseProfile != null">
        enterprise_profile = #{record.enterpriseProfile,jdbcType=VARCHAR},
      </if>
      <if test="record.enterpriseDetails != null">
        enterprise_details = #{record.enterpriseDetails,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enterprise
    set enterprise_id = #{record.enterpriseId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      enterprise_name = #{record.enterpriseName,jdbcType=VARCHAR},
      enterprise_logourl = #{record.enterpriseLogourl,jdbcType=VARCHAR},
      enterprise_website = #{record.enterpriseWebsite,jdbcType=VARCHAR},
      enterprise_phone = #{record.enterprisePhone,jdbcType=VARCHAR},
      enterprise_email = #{record.enterpriseEmail,jdbcType=VARCHAR},
      enterprise_city = #{record.enterpriseCity,jdbcType=VARCHAR},
      enterprise_sector = #{record.enterpriseSector,jdbcType=VARCHAR},
      enterprise_scale = #{record.enterpriseScale,jdbcType=VARCHAR},
      enterprise_profile = #{record.enterpriseProfile,jdbcType=VARCHAR},
      enterprise_details = #{record.enterpriseDetails,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.hust.offer100.pojo.Enterprise">
    update enterprise
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="enterpriseName != null">
        enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseLogourl != null">
        enterprise_logourl = #{enterpriseLogourl,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseWebsite != null">
        enterprise_website = #{enterpriseWebsite,jdbcType=VARCHAR},
      </if>
      <if test="enterprisePhone != null">
        enterprise_phone = #{enterprisePhone,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseEmail != null">
        enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseCity != null">
        enterprise_city = #{enterpriseCity,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseSector != null">
        enterprise_sector = #{enterpriseSector,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseScale != null">
        enterprise_scale = #{enterpriseScale,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseProfile != null">
        enterprise_profile = #{enterpriseProfile,jdbcType=VARCHAR},
      </if>
      <if test="enterpriseDetails != null">
        enterprise_details = #{enterpriseDetails,jdbcType=VARCHAR},
      </if>
    </set>
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.hust.offer100.pojo.Enterprise">
    update enterprise
    set user_id = #{userId,jdbcType=INTEGER},
      enterprise_name = #{enterpriseName,jdbcType=VARCHAR},
      enterprise_logourl = #{enterpriseLogourl,jdbcType=VARCHAR},
      enterprise_website = #{enterpriseWebsite,jdbcType=VARCHAR},
      enterprise_phone = #{enterprisePhone,jdbcType=VARCHAR},
      enterprise_email = #{enterpriseEmail,jdbcType=VARCHAR},
      enterprise_city = #{enterpriseCity,jdbcType=VARCHAR},
      enterprise_sector = #{enterpriseSector,jdbcType=VARCHAR},
      enterprise_scale = #{enterpriseScale,jdbcType=VARCHAR},
      enterprise_profile = #{enterpriseProfile,jdbcType=VARCHAR},
      enterprise_details = #{enterpriseDetails,jdbcType=VARCHAR}
    where enterprise_id = #{enterpriseId,jdbcType=INTEGER}
  </update> -->
</mapper>